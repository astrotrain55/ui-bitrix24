import { action } from '@storybook/addon-actions';
import BxInputDate, { props } from '../components/BxInputDate.vue';

const defaultProps = {
  modelValue: null,
  after: 'after',
  range: false,
  autoRange: null,
  multiCalendars: false,
  monthPicker: false,
  timePicker: false,
  yearPicker: false,
  weekPicker: false,
  textInput: true,
  inline: false,
  multiDates: false,
  flow: () => [],
  utc: false,
  vertical: false,
  modelAuto: false,
  timezone: null,
  partialRange: true,
  presetRanges: [],
  minRange: null,
  maxRange: null,
  fixedStart: false,
  fixedEnd: false,
  multiCalendarsSolo: false,
  multiStatic: true,
  textInputOptions: () => ({}),
  modeHeight: 255,
  inlineWithInput: false,
  multiDatesLimit: null,
  partialFlow: false,
  showLastInRange: true,
  autoApplyMonth: true,
  uid: null,
  monthChangeOnScroll: true,
  modelType: 'format',
  clearable: false,
  closeOnScroll: false,
  autoApply: true,
  placeholder: '',
  noToday: false,
  closeOnAutoApply: true,
  markers: [],
  highlight: null,
  highlightWeekDays: null,
  highlightDisabledDays: false,
  showNowButton: false,
  disabled: false,
  readonly: false,
  required: false,
  name: '',
  autocomplete: 'off',
  keepActionRow: false,
  noSwipe: false,
  hideNavigation: () => [],
  onClickOutside: null,
  actionRow: () => ({}),
  disableYearSelect: false,
  closeOnClearValue: true,
  calendar: null,
  weekNumbers: null,
  hideOffsetDates: false,
  minDate: null,
  maxDate: null,
  preventMinMaxNavigation: false,
  ignoreTimeValidation: false,
  startDate: null,
  focusStartDate: false,
  weekStart: 1,
  filters: () => ({}),
  disableMonthYearSelect: false,
  yearRange: [1900, 2100],
  reverseYears: false,
  allowedDates: null,
  disabledDates: [],
  disabledWeekDays: [],
  noDisabledRange: false,
  timePickerInline: false,
  enableTimePicker: false,
  is24: true,
  enableSeconds: false,
  hoursIncrement: 1,
  minutesIncrement: 1,
  secondsIncrement: 1,
  hoursGridIncrement: 1,
  minutesGridIncrement: 5,
  secondsGridIncrement: 5,
  noHoursOverlay: false,
  noMinutesOverlay: false,
  noSecondsOverlay: false,
  minTime: null,
  maxTime: null,
  startTime: null,
  disableTimeRangeValidation: false,
  disabledTimes: undefined,
  format: 'dd.MM.yyyy',
  previewFormat: '',
  monthNameFormat: 'short',
  locale: 'ru',
  formatLocale: null,
  selectText: 'Select',
  cancelText: 'Cancel',
  nowButtonLabel: 'Now',
  weekNumName: 'W',
  ariaLabels: {},
  dayNames: null,
  position: 'center',
  teleport: false,
  altPosition: null,
  autoPosition: true,
  teleportCenter: false,
  allowPreventDefault: false,
  escClose: true,
  spaceConfirm: true,
  monthChangeOnArrows: true,
  arrowNavigation: false,
  transitions: true,
  sixWeeks: false,
  dark: false,
  offset: 10,
  hideInputIcon: false,
  state: null,
  inputClassName: '',
  menuClassName: '',
  calendarClassName: '',
  calendarCellClassName: '',
  dayClass: null,
};
export default {
  title: 'forms/bx-input-date',
  component: BxInputDate,
  parameters: {
    docs: {
      description: {
        component: `
  Component based on <a href="https://vue3datepicker.com" target="_blank">@vuepic/vue-datepicker</a>
        `.trim(),
      },
    },
  },
  args: {
    'update:modelValue': action('update:modelValue'),
    'text-submit': action('text-submit'),
    open: action('open'),
    closed: action('closed'),
    cleared: action('cleared'),
    focus: action('focus'),
    blur: action('blur'),
    'internal-model-change': action('internal-model-change'),
    'recalculate-position': action('recalculate-position'),
    'flow-step': action('flow-step'),
    'update-month-year': action('update-month-year'),
    'invalid-select': action('invalid-select'),
    'invalid-fixed-range': action('invalid-fixed-range'),
    'tooltip-open': action('tooltip-open'),
    'tooltip-close': action('tooltip-close'),
    'time-picker-open': action('time-picker-open'),
    'time-picker-close': action('time-picker-close'),
    'am-pm-change': action('am-pm-change'),
    'range-start': action('range-start'),
    'range-end': action('range-end'),
    modelValue: new Intl.DateTimeFormat(defaultProps.locale).format(Date.now()),
    after: defaultProps.after,
    range: defaultProps.range,
    autoRange: '',
    multiCalendars: defaultProps.multiCalendars,
    monthPicker: defaultProps.monthPicker,
    timePicker: defaultProps.timePicker,
    yearPicker: defaultProps.yearPicker,
    weekPicker: defaultProps.weekPicker,
    textInput: defaultProps.textInput,
    inline: defaultProps.inline,
    multiDates: defaultProps.multiDates,
    flow: defaultProps.flow(),
    utc: defaultProps.utc,
    vertical: defaultProps.vertical,
    modelAuto: defaultProps.modelAuto,
    timezone: '',
    partialRange: defaultProps.partialRange,
    presetRanges: defaultProps.presetRanges,
    minRange: defaultProps.minRange,
    maxRange: defaultProps.maxRange,
    fixedStart: defaultProps.fixedStart,
    fixedEnd: defaultProps.fixedEnd,
    multiCalendarsSolo: defaultProps.multiCalendarsSolo,
    multiStatic: defaultProps.multiStatic,
    textInputOptions: defaultProps.textInputOptions(),
    modeHeight: defaultProps.modeHeight,
    inlineWithInput: defaultProps.inlineWithInput,
    multiDatesLimit: defaultProps.multiDatesLimit,
    partialFlow: defaultProps.partialFlow,
    showLastInRange: defaultProps.showLastInRange,
    autoApplyMonth: defaultProps.autoApplyMonth,
    uid: '',
    monthChangeOnScroll: defaultProps.monthChangeOnScroll,
    modelType: defaultProps.modelType,
    clearable: defaultProps.clearable,
    closeOnScroll: defaultProps.closeOnScroll,
    autoApply: defaultProps.autoApply,
    placeholder: defaultProps.placeholder,
    noToday: defaultProps.noToday,
    closeOnAutoApply: defaultProps.closeOnAutoApply,
    markers: defaultProps.markers,
    highlight: [],
    highlightWeekDays: [],
    highlightDisabledDays: defaultProps.highlightDisabledDays,
    showNowButton: defaultProps.showNowButton,
    disabled: defaultProps.disabled,
    readonly: defaultProps.readonly,
    required: defaultProps.required,
    name: defaultProps.name,
    autocomplete: defaultProps.autocomplete,
    keepActionRow: defaultProps.keepActionRow,
    noSwipe: defaultProps.noSwipe,
    hideNavigation: defaultProps.hideNavigation(),
    onClickOutside: defaultProps.onClickOutside,
    actionRow: defaultProps.actionRow(),
    disableYearSelect: defaultProps.disableYearSelect,
    closeOnClearValue: defaultProps.closeOnClearValue,
    calendar: defaultProps.calendar,
    weekNumbers: defaultProps.weekNumbers,
    hideOffsetDates: defaultProps.hideOffsetDates,
    minDate: defaultProps.minDate,
    maxDate: defaultProps.maxDate,
    preventMinMaxNavigation: defaultProps.preventMinMaxNavigation,
    ignoreTimeValidation: defaultProps.ignoreTimeValidation,
    startDate: defaultProps.startDate,
    focusStartDate: defaultProps.focusStartDate,
    weekStart: defaultProps.weekStart,
    filters: defaultProps.filters(),
    disableMonthYearSelect: defaultProps.disableMonthYearSelect,
    yearRange: defaultProps.yearRange,
    reverseYears: defaultProps.reverseYears,
    allowedDates: defaultProps.allowedDates,
    disabledDates: defaultProps.disabledDates,
    disabledWeekDays: defaultProps.disabledWeekDays,
    noDisabledRange: defaultProps.noDisabledRange,
    timePickerInline: defaultProps.timePickerInline,
    enableTimePicker: defaultProps.enableTimePicker,
    is24: defaultProps.is24,
    enableSeconds: defaultProps.enableSeconds,
    hoursIncrement: defaultProps.hoursIncrement,
    minutesIncrement: defaultProps.minutesIncrement,
    secondsIncrement: defaultProps.secondsIncrement,
    hoursGridIncrement: defaultProps.hoursGridIncrement,
    minutesGridIncrement: defaultProps.minutesGridIncrement,
    secondsGridIncrement: defaultProps.secondsGridIncrement,
    noHoursOverlay: defaultProps.noHoursOverlay,
    noMinutesOverlay: defaultProps.noMinutesOverlay,
    noSecondsOverlay: defaultProps.noSecondsOverlay,
    minTime: defaultProps.minTime,
    maxTime: defaultProps.maxTime,
    startTime: defaultProps.startTime,
    disableTimeRangeValidation: defaultProps.disableTimeRangeValidation,
    disabledTimes: defaultProps.disabledTimes,
    format: defaultProps.format,
    previewFormat: defaultProps.previewFormat,
    monthNameFormat: defaultProps.monthNameFormat,
    locale: defaultProps.locale,
    formatLocale: defaultProps.formatLocale,
    selectText: defaultProps.selectText,
    cancelText: defaultProps.cancelText,
    nowButtonLabel: defaultProps.nowButtonLabel,
    weekNumName: defaultProps.weekNumName,
    ariaLabels: defaultProps.ariaLabels,
    dayNames: ['Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su'],
    position: defaultProps.position,
    teleport: defaultProps.teleport,
    altPosition: defaultProps.altPosition,
    autoPosition: defaultProps.autoPosition,
    teleportCenter: defaultProps.teleportCenter,
    allowPreventDefault: defaultProps.allowPreventDefault,
    escClose: defaultProps.escClose,
    spaceConfirm: defaultProps.spaceConfirm,
    monthChangeOnArrows: defaultProps.monthChangeOnArrows,
    arrowNavigation: defaultProps.arrowNavigation,
    transitions: defaultProps.transitions,
    sixWeeks: defaultProps.sixWeeks,
    dark: defaultProps.dark,
    offset: defaultProps.offset,
    hideInputIcon: defaultProps.hideInputIcon,
    state: defaultProps.state,
    inputClassName: defaultProps.inputClassName,
    menuClassName: defaultProps.menuClassName,
    calendarClassName: defaultProps.calendarClassName,
    calendarCellClassName: defaultProps.calendarCellClassName,
    dayClass: defaultProps.dayClass,
  },
  argTypes: {
    modelValue: {
      defaultValue: defaultProps.modelValue,
      control: { type: 'text' },
    },
    after: {
      options: props.after,
      defaultValue: defaultProps.after,
      control: { type: 'inline-radio' },
    },
    autoRange: {
      defaultValue: defaultProps.autoRange,
      control: { type: 'text' },
    },
    multiCalendars: {
      defaultValue: defaultProps.multiCalendars,
      control: { type: 'boolean' },
    },
    flow: {
      defaultValue: defaultProps.flow(),
      options: props.flows,
      control: { type: 'inline-check' },
    },
    utc: {
      defaultValue: defaultProps.utc,
      options: props.utc,
      control: { type: 'inline-radio' },
    },
    minRange: {
      defaultValue: defaultProps.minRange,
      control: { type: 'number' },
    },
    maxRange: {
      defaultValue: defaultProps.maxRange,
      control: { type: 'number' },
    },
    modeHeight: {
      defaultValue: defaultProps.modeHeight,
      control: { type: 'number' },
    },
    multiDatesLimit: {
      defaultValue: defaultProps.multiDatesLimit,
      control: { type: 'number' },
    },
    monthChangeOnScroll: {
      defaultValue: defaultProps.monthChangeOnScroll,
      options: props.monthChangeOnScrolls,
      control: { type: 'inline-radio' },
    },
    hideNavigation: {
      defaultValue: defaultProps.hideNavigation(),
      options: props.hideNavigations,
      control: { type: 'inline-check' },
    },
    weekNumbers: {
      defaultValue: defaultProps.weekNumbers,
      options: props.weekNumbers,
      control: { type: 'inline-radio' },
    },
    focusStartDate: {
      defaultValue: defaultProps.focusStartDate,
      control: { type: 'boolean' },
    },
    format: {
      defaultValue: defaultProps.format,
      control: { type: 'text' },
    },
    previewFormat: {
      defaultValue: defaultProps.previewFormat,
      control: { type: 'text' },
    },
    monthNameFormat: {
      defaultValue: defaultProps.monthNameFormat,
      options: props.monthNameFormats,
      control: { type: 'inline-radio' },
    },
    position: {
      defaultValue: defaultProps.position,
      options: props.positions,
      control: { type: 'inline-radio' },
    },
    teleport: {
      defaultValue: defaultProps.teleport,
      control: { type: 'boolean' },
    },
    transitions: {
      defaultValue: defaultProps.transitions,
      control: { type: 'boolean' },
    },
    sixWeeks: {
      defaultValue: defaultProps.sixWeeks,
      options: props.sixWeeks,
      control: { type: 'inline-radio' },
    },
    offset: {
      defaultValue: defaultProps.offset,
      control: { type: 'number' },
    },
    state: {
      defaultValue: defaultProps.state,
      options: [true, false, null],
      control: { type: 'inline-radio' },
    },
  },
};

export const Default = {
  render: (args) => ({
    template: '<bx-input-date v-bind="args" v-on="args" v-model="args.modelValue"></bx-input-date>',
    data: () => ({ args }),
    components: { BxInputDate },
  }),
};
